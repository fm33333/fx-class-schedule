server:
  port: 8090

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver  # MySQL
    # mysql????
    # url: jdbc:mysql://localhost:3306/puzzle_day?serverTimezone=GMT%2B0&&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    url: jdbc:mysql://localhost:3306/class_schedule?serverTimezone=GMT%2B8&&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: classschedule
    password: 123456

# mybatis配置
mybatis:
  configuration: # mybatis-plus配置控制台打印完整带参数SQL语句
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true    # 驼峰转换 从数据库列名到Java属性驼峰命名的类似映射
  #  mapper-locations: classpath:/mapper/*.xml   # 引入mybatis-plus-boot-starter包，需要配置路径
  type-aliases-package: com.example.classschedule.data.entity
  mapperLocations: classpath:mapper/*.xml

fx:
  # 导入、导出等文件路径
  profile: C:/Users/86181/Desktop/study/福新小学/class-schedule/doc

# 配置springdoc-openapi，用于文档化和访问API
# 地址：http://localhost:8090/doc.html#/home
springdoc:
  # 配置Swagger UI的访问路径和排序方式
  swagger-ui:
    path: /swagger-ui.html  # Swagger UI的访问路径
    tags-sorter: alpha      # 按字母顺序排序标签
    operations-sorter: alpha  # 按字母顺序排序操作
  # 配置API文档的访问路径
  api-docs:
    path: /v3/api-docs  # API文档的访问路径
  # 配置API分组，用于组织和管理API
  group-configs:
    - group: 'default'   # API分组名称
      paths-to-match: '/**'  # 匹配所有路径
      packages-to-scan: com.example.classschedule.controller  # 扫描的包，用于自动发现API

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn
